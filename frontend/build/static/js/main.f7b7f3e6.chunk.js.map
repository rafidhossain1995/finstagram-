{"version":3,"sources":["firebase.js","utility/firebaseFunction.js","utility/apiURL.js","component/Login.js","component/SignUp.js","providers/AuthContext.js","component/Profile.js","component/NavBar.js","component/Home.js","component/Users.js","utility/routesUtil.js","App.js","serviceWorker.js","index.js"],"names":["process","config","apiKey","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","databaseURL","REACT_APP_DATABASEURL","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENTID","app","initializeApp","logout","firebase","auth","signOut","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","apiURL","window","location","hostname","Login","history","useHistory","useState","setEmail","setPassword","console","log","handleSubmit","e","a","preventDefault","push","className","rel","href","src","onSubmit","type","value","placeholder","onChange","currentTarget","to","API","SignUp","localStorage","clear","username","setUsername","userPic","setUserPic","setLoading","res","axios","post","id","user","uid","uploadPicture","files","target","data","FormData","append","fetch","method","body","json","file","secure_url","onClick","onInput","AuthContext","createContext","AuthProvider","children","loading","currentUser","setCurrentUser","token","setToken","updateUser","lastLogin","metadata","getIdToken","then","useEffect","onAuthStateChanged","Provider","Profile","NavBar","params","useContext","Home","Users","users","setUsers","url","headers","getAllUsers","map","key","AuthRoute","rest","render","ProtectedRoute","App","exact","path","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f7b7f3e6.chunk.js","sourcesContent":["import app from 'firebase/app'\nimport 'firebase/auth'\n\nconst{\n    REACT_APP_APIKEY,\n    REACT_APP_AUTHDOMAIN,\n    REACT_APP_DATABASEURL,\n    REACT_APP_PROJECTID,\n    REACT_APP_STORAGEBUCKET,\n    REACT_APP_MESSAGINGSENDERID,\n    REACT_APP_APPID,\n    REACT_APP_MEASUREMENTID,\n} = process.env\n\nconst config = {\n    apiKey: REACT_APP_APIKEY,\n    authDomain:  REACT_APP_AUTHDOMAIN,\n    databaseURL: REACT_APP_DATABASEURL,\n    projectId: REACT_APP_PROJECTID,\n    storageBucket: REACT_APP_STORAGEBUCKET,\n    messagingSenderId: REACT_APP_MESSAGINGSENDERID,\n    appId: REACT_APP_APPID,\n    measurementId: REACT_APP_MEASUREMENTID,\n}\n\napp.initializeApp(config)\nexport default app\n","import firebase from \"../firebase\"\n\nexport const logout = () => firebase.auth().signOut()\n\nexport const login = (email, password) => firebase.auth().signInWithEmailAndPassword(email, password)\n\nexport const signup = (email, password)=> firebase.auth().createUserWithEmailAndPassword(email,password)\n\nexport const getFirebaseIdToken = ()=>firebase.auth().currentUser.getIdToken(false)","export const apiURL = () => {\n    return window.location.hostname === \"localhost\"\n      ? \"http://localhost:3000\"\n      : \"https://ig-pursuit.herokuapp.com\";\n  };\n  ","import React,{useState} from \"react\";\nimport { useInputs } from \"../utility/InputHooks\"\nimport {useHistory} from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\nimport \"../CSS/Login.css\";\nimport axios from \"axios\"\nimport {login} from \"../utility/firebaseFunction\"\n\nimport { apiURL } from \"../utility/apiURL\";\nconst API = apiURL();\n\nexport default function Login(){\n  const history = useHistory()\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n const [error, setError] = useState(false)\n console.log(email, password)\n\n const handleSubmit = async (e) => {\n  e.preventDefault();\n    try {\n      await login(email, password)\n      history.push(\"/home\"); \n    } catch (err) {\n      console.log(err)\n    }\n  \n};\n\n  return (\n    <div className=\"main\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n      />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"instagram\">\n            <img\n              src=\"https://miro.medium.com/max/701/1*gbGs4B0o65vGY6AeruKCdw.jpeg\"\n              className=\"ig-pic\"\n\n            />\n          </div>\n\n          <div className=\"instagram\">\n            <div className=\"right-column text-center\">\n              <img\n                src=\"https://see.fontimg.com/api/renderfont4/YdKj/eyJyIjoiZnMiLCJoIjoxMzAsInciOjIwMDAsImZzIjo2NSwiZmdjIjoiIzAwMDAwMCIsImJnYyI6IiNGRkZGRkYiLCJ0IjoxfQ/Rmluc3RhZ3JhbQ/countryside.png\"\n                className=\"ig-logo\"\n              />\n              <p className=\"description\">\n                Sign In To See Photo And Videos From Your Friends\n              </p>\n            \n              <form onSubmit={handleSubmit}>\n              <div className=\"form\">\n                  <input type=\"text\" className=\"form-control\" value = {email} placeholder=\"Email\"  onChange={(e) => setEmail(e.currentTarget.value)}/>\n              </div>\n              <div className=\"form\">\n                  <input type=\"password\"  className=\"form-control\" value = {password} placeholder=\"Password\"  onChange={(e) => setPassword(e.currentTarget.value)}/>\n              </div>\n              <input type=\"submit\" className=\"btn btn-primary btn-block\" placeholder=\"signin\"/>\n            </form>\n            <div className=\"right-column-login text-center\">\n            <Link to=\"/\" className=\"button\">New? Sign Up</Link>\n            </div>\n            </div>\n            \n          </div>\n\n        </div>\n      </div>\n    </div>\n   \n  );\n\n  \n};\n","import React, { useState } from \"react\";\nimport { useInputs } from \"../utility/InputHooks\"\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../CSS/SignUp.css\";\nimport axios from \"axios\";\nimport { signup } from \"../utility/firebaseFunction\";\nimport { apiURL } from \"../utility/apiURL\";\nconst API = apiURL();\n\nconst SignUp = () => {\n  localStorage.clear();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userPic, setUserPic] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n  const history = useHistory();\n  console.log(email,username, password);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {    \n        let res = await signup(email, password);\n        await axios.post(`${API}/users`, {id: res.user.uid, email, username, password });\n    } catch (err) {\n      console.log(err)\n    }\n  };\n\n\n\n  const uploadPicture = async (e) => {\n    const files = e.target.files;\n\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"instagram_db\");\n    data.append(\"cloud_name\", \"dhlczyds5\");\n    setLoading(true);\n    let res = await fetch(\n      \"https://api.cloudinary.com/v1_1/dhlczyds5/image/upload\",\n      {\n        method: \"Post\",\n        body: data,\n      }\n    );\n    const file = await res.json();\n    setUserPic(file.secure_url);\n    setLoading(false);\n  };\n  return (\n    <div className=\"main\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n      />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"instagram\">\n            <img\n              src=\"https://miro.medium.com/max/701/1*gbGs4B0o65vGY6AeruKCdw.jpeg\"\n              className=\"ig-pic\"\n            />\n          </div>\n\n          <div className=\"instagram\">\n            <div className=\"right-column text-center\">\n              <img\n                src=\"https://see.fontimg.com/api/renderfont4/YdKj/eyJyIjoiZnMiLCJoIjoxMzAsInciOjIwMDAsImZzIjo2NSwiZmdjIjoiIzAwMDAwMCIsImJnYyI6IiNGRkZGRkYiLCJ0IjoxfQ/Rmluc3RhZ3JhbQ/countryside.png\"\n                className=\"ig-logo\"\n              />\n              <p className=\"description\">\n                Sign Up To See Photo And Videos From Your Friends\n              </p>\n              <div className=\"sign-up-info\">\n                <form onClick={handleSubmit}>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    onChange={(e) => setEmail(e.currentTarget.value)}\n                  />\n\n\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Username\"\n                    onChange={(e) => setUsername(e.currentTarget.value)}\n                  />\n\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.currentTarget.value)}\n                  />\n\n                  <input type=\"file\" onInput={uploadPicture} {...userPic} />\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    placeholder=\"signup\"\n                  />\n                </form>\n              </div>\n              <p className=\"terms-conditions\">\n                {\" \"}\n                By signing up, you agree to our Terms and Policy\n              </p>\n            </div>\n            <div className=\"right-column-login text-center\">\n              <Link to=\"/login\" className=\"button\">\n                Have An Account? SignIn\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SignUp;\n","import React, {createContext, useEffect, useState} from \"react\"\nimport {getFirebaseIdToken} from \"../utility/firebaseFunction\"\nimport firebase from \"../firebase\"\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(null);\n\n  const updateUser = (user) => {\n    if (user) {\n      const { email, id } = user;\n      const lastLogin = user.metadata.lastLogin;\n      setCurrentUser({ email, lastLogin, id: id });\n      getFirebaseIdToken().then((token) => {\n        setToken(token);\n        setLoading(false);\n      });\n    } else {\n      setCurrentUser(null);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(updateUser);\n    return unsubscribe;\n  }, []);\n\n  if (loading) {\n    return (\n      <div>\n          ...loading\n      </div>\n    );\n  }\n  return (\n    <AuthContext.Provider value={{ currentUser, token }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;","import React, {useContext} from \"react\"\nimport {logout} from \"../utility/firebaseFunction\"\nimport {AuthContext} from \"../providers/AuthContext\"\nimport { NavLink } from \"react-router-dom\"\n\nconst Profile = ()=>{\n   return(\n       <h1>hello</h1>\n   )\n}\nexport default Profile","import React, {useContext} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {logout} from \"../utility/firebaseFunction\"\nimport {AuthContext} from \"../providers/AuthContext\"\n\n\nexport default function NavBar(params) {\n    const currentUser = useContext(AuthContext)\n    const display = ()=>{\n        if(currentUser){\n            return <button onClick= {logout}>logout</button>\n        }else{\n            return(\n                <>\n                <NavLink to ={\"/signup\"}>signup</NavLink>\n                <NavLink to ={\"/login\"}>login</NavLink>\n                \n                </>\n            )\n        }\n    }\n    return(\n        <nav>\n            <NavLink to={\"/home\"}>Home</NavLink>\n            <NavLink to={\"/users\"}>Show All Users</NavLink>\n            <button onClick = {logout}>Logout</button>\n            {display()}\n        </nav>\n    )\n};","import React from \"react\"\n\nconst Home = ()=>{\n    return(\n        <h1> Home Page</h1>\n    )\n}\nexport default Home","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { apiURL } from \"../utility/apiURL\"\nimport {AuthContext} from \"../providers/AuthContext\"\nexport default function Users() {\n\n    const [users, setUsers] = useState([]);\n    const API = apiURL();\n    const {token} = useContext(AuthContext)\n    useEffect(() => {\n        const getAllUsers = async () => {     \n                    let res = await axios({\n                    method: \"get\", \n                    url: `${API}/users/all`,\n                    headers: {\n                        'AuthToken': token\n                    }\n                })\n            setUsers(res.data.users);\n        }\n        getAllUsers();\n    }, [API])\n\n    return(\n        <div>\n            <h1>All USERS MUST BE LOGGED IN TO VIEW</h1>\n            <ul>\n                {users.map(user => {\n                    return <li key={user.id}>{user.email}</li>\n                })}\n            </ul>\n        </div>\n    )\n};","import React, {useContext} from \"react\"\nimport {Route, Redirect} from \"react-router-dom\"\nimport {AuthContext} from \"../providers/AuthContext\"\n\nexport const AuthRoute = ({children, ...rest})=>{\n    const { currentUser } = useContext(AuthContext)\n\n    return(\n        <Route\n            {...rest}\n            render = {({location})=>{\n                return !currentUser ? children : <Redirect to = \"/home\"/>\n            }}\n        />\n    )\n}\n\nexport const ProtectedRoute = ({children, ...rest})=>{\n    const {currentUser} = useContext(AuthContext)\n    return(\n        <Route\n            {...rest}\n            render= {({location})=>{\n                return currentUser ? children : <Redirect to =\"/login\"/>\n            }}\n        />\n    )\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./component/Login\"\nimport SignUp from \"./component/SignUp\";\nimport AuthProvider from \"./providers/AuthContext\"\nimport Profile from \"./component/Profile\"\nimport NavBar from \"./component/NavBar\"\nimport Home from \"./component/Home\"\n\nimport Users from \"./component/Users\"\nimport {AuthRoute, ProtectedRoute} from \"./utility/routesUtil\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <AuthProvider>\n    <NavBar />\n      <Switch>\n        <AuthRoute exact path={\"/signup\"}>\n          <SignUp />\n        </AuthRoute>\n\n        <AuthRoute path={\"/login\"}>\n          <Login />\n        </AuthRoute>\n\n        <ProtectedRoute path=\"/users\">\n          <Users />\n        </ProtectedRoute>\n\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n\n      </Switch>\n    </AuthProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import 'bootstrap/dist/css/bootstrap.min.css'\n// import $ from 'jquery';\n// import Popper from 'popper.js';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(<Router><App/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}