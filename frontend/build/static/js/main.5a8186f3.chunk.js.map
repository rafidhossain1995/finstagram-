{"version":3,"sources":["firebase.js","utility/firebaseFunction.js","utility/apiURL.js","component/Login.js","component/SignUp.js","providers/AuthContext.js","component/NavBar.js","component/PostCard.js","component/DisplayImage.js","component/Profile.js","utility/InputHooks.js","component/Home.js","component/Users.js","utility/routesUtil.js","App.js","serviceWorker.js","index.js"],"names":["process","config","apiKey","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","databaseURL","REACT_APP_DATABASEURL","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENTID","app","initializeApp","logout","firebase","auth","signOut","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","apiURL","window","location","hostname","Login","history","useHistory","useState","setEmail","setPassword","console","log","handleSubmit","e","a","preventDefault","push","alert","className","rel","href","src","onSubmit","type","value","placeholder","onChange","currentTarget","to","API","SignUp","localStorage","clear","username","setUsername","userPic","setUserPic","setLoading","res","axios","post","id","user","uid","uploadPicture","files","target","data","FormData","append","fetch","method","body","json","file","secure_url","onClick","onInput","AuthContext","createContext","AuthProvider","children","loading","currentUser","setCurrentUser","token","setToken","updateUser","lastLogin","metadata","getIdToken","then","useEffect","onAuthStateChanged","Provider","NavBar","params","useContext","PostCard","imageUrl","postContent","style","height","width","border","DisplayImage","posts","setPosts","user_id","url","headers","payload","createPosts","showPosts","map","pictures","content","tabIndex","Profile","setUser","initialValue","setValue","useInputs","setFile","fetchData","handleNewPost","formData","newPost","reload","alt","Home","allPosts","Users","users","setUsers","getAllUsers","key","AuthRoute","rest","render","ProtectedRoute","App","exact","path","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5a8186f3.chunk.js","sourcesContent":["import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/storage'\nconst{\n    REACT_APP_APIKEY,\n    REACT_APP_AUTHDOMAIN,\n    REACT_APP_DATABASEURL,\n    REACT_APP_PROJECTID,\n    REACT_APP_STORAGEBUCKET,\n    REACT_APP_MESSAGINGSENDERID,\n    REACT_APP_APPID,\n    REACT_APP_MEASUREMENTID,\n} = process.env\n\nconst config = {\n    apiKey: REACT_APP_APIKEY,\n    authDomain:  REACT_APP_AUTHDOMAIN,\n    databaseURL: REACT_APP_DATABASEURL,\n    projectId: REACT_APP_PROJECTID,\n    storageBucket: REACT_APP_STORAGEBUCKET,\n    messagingSenderId: REACT_APP_MESSAGINGSENDERID,\n    appId: REACT_APP_APPID,\n    measurementId: REACT_APP_MEASUREMENTID,\n}\n\napp.initializeApp(config)\n\n\n\n\nexport default app\n","import firebase from \"../firebase\"\n\nexport const logout = () => firebase.auth().signOut()\n\nexport const login = (email, password) => firebase.auth().signInWithEmailAndPassword(email, password)\n\nexport const signup = (email, password)=> firebase.auth().createUserWithEmailAndPassword(email,password)\n\nexport const getFirebaseIdToken = ()=>firebase.auth().currentUser.getIdToken(false)","export const apiURL = () => {\n    return window.location.hostname === \"localhost\"\n      ? \"http://localhost:3000\"\n      : \"https://ig-pursuit.herokuapp.com\";\n  };\n  ","import React,{useState} from \"react\";\nimport { useInputs } from \"../utility/InputHooks\"\nimport {useHistory} from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\nimport \"../CSS/Login.css\";\nimport axios from \"axios\"\nimport {login} from \"../utility/firebaseFunction\"\n\nimport { apiURL } from \"../utility/apiURL\";\nconst API = apiURL();\n\nexport default function Login(){\n  const history = useHistory()\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n const [error, setError] = useState(false)\n console.log(email, password)\n\n const handleSubmit = async (e) => {\n  e.preventDefault();\n    try {\n      await login(email, password)\n      history.push(\"/home\"); \n    } catch (err) {\n      alert(\"Username Or Password Is incorrect\")\n    }\n  \n};\n\n  return (\n    <div className=\"main\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n      />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"instagram\">\n            <img\n              src=\"https://miro.medium.com/max/701/1*gbGs4B0o65vGY6AeruKCdw.jpeg\"\n              className=\"ig-pic\"\n\n            />\n          </div>\n\n          <div className=\"instagram\">\n            <div className=\"right-column text-center\">\n              <img\n                src=\"https://see.fontimg.com/api/renderfont4/YdKj/eyJyIjoiZnMiLCJoIjoxMzAsInciOjIwMDAsImZzIjo2NSwiZmdjIjoiIzAwMDAwMCIsImJnYyI6IiNGRkZGRkYiLCJ0IjoxfQ/Rmluc3RhZ3JhbQ/countryside.png\"\n                className=\"ig-logo\"\n              />\n              <p className=\"description\">\n                Sign In To See Photo And Videos From Your Friends\n              </p>\n            \n              <form onSubmit={handleSubmit}>\n              <div className=\"form\">\n                  <input type=\"text\" className=\"form-control\" value = {email} placeholder=\"Email\"  onChange={(e) => setEmail(e.currentTarget.value)}/>\n              </div>\n              <div className=\"form\">\n                  <input type=\"password\"  className=\"form-control\" value = {password} placeholder=\"Password\"  onChange={(e) => setPassword(e.currentTarget.value)}/>\n              </div>\n              <input type=\"submit\" className=\"btn btn-primary btn-block\" placeholder=\"signin\"/>\n            </form>\n            <div className=\"right-column-login text-center\">\n            <Link to=\"/\" className=\"button\">New? Sign Up</Link>\n            </div>\n            </div>\n            \n          </div>\n\n        </div>\n      </div>\n    </div>\n   \n  );\n\n  \n};\n","import React, { useState } from \"react\";\nimport { useInputs } from \"../utility/InputHooks\"\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../CSS/SignUp.css\";\nimport axios from \"axios\";\nimport { signup } from \"../utility/firebaseFunction\";\nimport { apiURL } from \"../utility/apiURL\";\nconst API = apiURL();\n\nconst SignUp = () => {\n  localStorage.clear();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userPic, setUserPic] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n  const history = useHistory();\n  console.log(email,username, password);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {    \n        let res = await signup(email, password);\n        await axios.post(`${API}/users`, {id: res.user.uid, email, username, password });\n    } catch (err) {\n      console.log(err)\n    }\n  };\n\n\n\n  const uploadPicture = async (e) => {\n    const files = e.target.files;\n\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"instagram_db\");\n    data.append(\"cloud_name\", \"dhlczyds5\");\n    setLoading(true);\n    let res = await fetch(\n      \"https://api.cloudinary.com/v1_1/dhlczyds5/image/upload\",\n      {\n        method: \"Post\",\n        body: data,\n      }\n    );\n    const file = await res.json();\n    setUserPic(file.secure_url);\n    setLoading(false);\n  };\n  return (\n    <div className=\"main\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n      />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"instagram\">\n            <img\n              src=\"https://miro.medium.com/max/701/1*gbGs4B0o65vGY6AeruKCdw.jpeg\"\n              className=\"ig-pic\"\n            />\n          </div>\n\n          <div className=\"instagram\">\n            <div className=\"right-column text-center\">\n              <img\n                src=\"https://see.fontimg.com/api/renderfont4/YdKj/eyJyIjoiZnMiLCJoIjoxMzAsInciOjIwMDAsImZzIjo2NSwiZmdjIjoiIzAwMDAwMCIsImJnYyI6IiNGRkZGRkYiLCJ0IjoxfQ/Rmluc3RhZ3JhbQ/countryside.png\"\n                className=\"ig-logo\"\n              />\n              <p className=\"description\">\n                Sign Up To See Photo And Videos From Your Friends\n              </p>\n              <div className=\"sign-up-info\">\n                <form onClick={handleSubmit}>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    onChange={(e) => setEmail(e.currentTarget.value)}\n                  />\n\n\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Username\"\n                    onChange={(e) => setUsername(e.currentTarget.value)}\n                  />\n\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.currentTarget.value)}\n                  />\n\n                  <input type=\"file\" onInput={uploadPicture} {...userPic} />\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    placeholder=\"signup\"\n                  />\n                </form>\n              </div>\n              <p className=\"terms-conditions\">\n                {\" \"}\n                By signing up, you agree to our Terms and Policy\n              </p>\n            </div>\n            <div className=\"right-column-login text-center\">\n              <Link to=\"/login\" className=\"button\">\n                Have An Account? SignIn\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SignUp;\n\n\n","import React, {createContext, useEffect, useState} from \"react\"\nimport {getFirebaseIdToken} from \"../utility/firebaseFunction\"\nimport firebase from \"../firebase\"\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(null);\n\n  const updateUser = (user) => {\n    if (user) {\n      const { email, uid } = user;\n      const lastLogin = user.metadata.lastLogin;\n      setCurrentUser({ email, lastLogin, id: uid });\n      getFirebaseIdToken().then((token) => {\n        setToken(token);\n        setLoading(false);\n      });\n    } else {\n      setCurrentUser(null);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(updateUser);\n    return unsubscribe;\n  }, []);\n\n  if (loading) {\n    return (\n      <div>\n          ...loading\n      </div>\n    );\n  }\n  return (\n    <AuthContext.Provider value={{ currentUser, token }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;","import React, {useContext} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {logout} from \"../utility/firebaseFunction\"\nimport {AuthContext} from \"../providers/AuthContext\"\nimport \"../CSS/Navbar.css\"\nimport Login from \"./Login\"\n\n\n\nexport default function NavBar(params) {\n    \n\nconst { currentUser } = useContext(AuthContext);\n\n\tconst displayButton = () => {\n\t\tif (currentUser) {\n\t\t\treturn <button onClick={logout}>Logout</button>;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t<Login/>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t};\n\n\n    return(\n    <>\n    <nav className = \"Nav\">\n      <div className = \"menu\">\n       \n        <div className = \"brand\">\n            <div className = \"logo\">\n            <div className=\"home-body\">\n            <NavLink to ={\"/home\"}className=\"insta-logo\">Instagram</NavLink>\n                <NavLink to={\"/home\"} className=\"home\" >Home</NavLink>\n                <NavLink to={\"/users\"} className=\"community\">Show All Users</NavLink>\n                <NavLink to = {\"/profile\"} className=\"profile\">Profile</NavLink>\n                \n                <button className=\"logout\" onClick = {logout}>Logout</button>  \n      \n            </div>\n              \n            </div>\n            \n        </div>\n      </div>\n    </nav>\n    \n     \n      </>\n       \n      \n    )\n};\n\n\n  ","import React from \"react\"\nimport \"../CSS/PostCard.css\"\nimport Comments from \"./Comments\"\n\nconst PostCard = ({imageUrl, postContent})=>{\n    const handleStyle = {\n        height:\"300px\",\n        width:\"300px\",\n        border: \"2px solid black\"\n        \n    }\n\n    return(\n        <div className=\"pic\">\n\n        <div className=\"picture\">\n            <img src={imageUrl} style={handleStyle}/>\n            <h2>{postContent}</h2>\n            <div className=\"iconz\">\n            <h3 className=\"heart\">heart</h3>\n            <h3 className=\"comment\">Comment</h3>\n            <h3 className=\"follow\">follow</h3>\n            <br/>\n            {/* <Comments/> */}\n            </div>\n          \n\n         </div>\n            \n        </div>\n\n       \n    )\n}\nexport default PostCard","import React, { useContext, useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport {AuthContext} from \"../providers/AuthContext\"\nimport { apiURL } from \"../utility/apiURL\"\nimport PostCard from \"./PostCard\"\nimport Comments from \"./Comments\"\nimport \"../CSS/DisplayImage.css\"\n\nconst DisplayImage =()=>{\n    const API = apiURL()\n    const {currentUser, token} = useContext(AuthContext)\n    const [posts, setPosts] = useState([])\n\n    let user_id = currentUser.id\n\n    useEffect(() => {\n            \n        const createPosts= async () => {  \n           \n                    let res = await axios({\n                    method: \"get\", \n                    url: `${API}/posts/${user_id}`,\n                    headers: {\n                        'AuthToken': token\n                    }\n                })\n                \n            setPosts(res.data.payload);\n            console.log(res.data)\n        }\n        createPosts();\n    }, [API])\n    \n    \n    const showPosts = posts.map((post)=>{\n        return(\n           <div>\n\n           <PostCard  \n           username = {post.username}\n           imageUrl={API + post.pictures}\n           postContent={post.content}\n          \n            />\n          \n           </div>\n        )\n    })\n    \n    \n\n    \n    return(\n      \n       \n\n         <div className=\"container\">\n            <div className=\"gallery\">\n                <div className=\"gallery-item\" tabIndex=\"0\">\n                <div className=\"gallery-image\">{showPosts}</div>\n             \n                </div>\n            </div>\n        </div>\n        \n    )\n}\nexport default DisplayImage","import React, {useContext, useEffect,  useState} from \"react\"\nimport {AuthContext,} from \"../providers/AuthContext\"\nimport { NavLink } from \"react-router-dom\"\nimport NavBar from \"./NavBar\"\nimport axios from \"axios\"\nimport { apiURL } from \"../utility/apiURL\"\nimport \"../CSS/Profile.css\"\nimport firebase from \"../firebase\"\nimport {storage} from \"../firebase\"\nimport { useInputs } from \"../utility/InputHooks\"\nimport DisplayImage from \"./DisplayImage\"\n\n\n    const Profile = ()=>{\n        const [user, setUser] = useState([])\n        const [url, setUrl] = useState(\"\")\n        const [progress, setProgress] = useState(0)\n        const [error, setError] = useState(\"\")\n        const content = useInputs(\"\")\n        const[file, setFile] = useState([])\n        const [postImage, setPostImagePath] = useState([])\n\n        const API = apiURL()\n        const {token} = useContext(AuthContext)\n        const {currentUser} = useContext(AuthContext)\n        let email = currentUser.email\n        let user_id = currentUser.id\n        \n\n        useEffect(() => {\n            \n        const fetchData = async () => {  \n           \n                    let res = await axios({\n                    method: \"get\", \n                    url: `${API}/users/singleUser/${email}`,\n                    headers: {\n                        'AuthToken': token\n                    }\n                })\n                \n            setUser(res.data.user);\n        }\n        fetchData();\n    }, [API])\n\n    \n        const onSelectImage = (e)=>{\n            e.preventDefault()\n            setFile(e.target.files[0])\n        }\n\n        const handleNewPost = async (e)=>{ \n            try{\n                e.preventDefault()\n                const formData = new FormData()\n                formData.append(\"allImages\", file)\n                formData.append(\"content\", content.value)\n                const config = {\n                    headers:{\n                        \"content-type\":\"multipart/form-data\",\n\n                    }\n                }\n                let newPost = await axios.post(`${API}/posts/${user_id}`, formData, config)\n                console.log(newPost.data)\n                console.log(\"new post created\")\n                window.location.reload()\n                \n\n                \n\n            }catch(err){\n                console.log(err)\n            }\n        }\n        debugger\n        \n       \n\n       \n        return(\n\n  \n\n            <div className=\"container\">\n                <div className=\"profile\">\n                    \n                    \n                <img src=\"https://images.unsplash.com/photo-1513721032312-6a18a42c8763?w=152&h=152&fit=crop&crop=faces\" alt=\"\"/>\n                </div>\n\n\t\t\t\t<h1 className=\"profile-user-name\">{user.username}</h1>\n                <form onSubmit={handleNewPost} className=\"profile-user-settings\">\n\n\n\t\t\t    <input className=\"file\" placeholder= \"hello\" type = \"file\" onChange={onSelectImage}/>\n                <input placeholder = \"Enter Caption\" className=\"content\" type=\"text\" {...content}/>\n                <button type=\"submit\" className=\"btn profile-edit-btn\">Add Picture</button>\n\n\t\t\t    </form>\n\n                <div className=\"profile-stats\">\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li><span className=\"profile-stat-count\">164</span> posts</li>\n\t\t\t\t\t<li><span className=\"profile-stat-count\">188</span> followers</li>\n\t\t\t\t\t<li><span className=\"profile-stat-count\">206</span> following</li>\n\t\t\t\t</ul>\n\n            <div className=\"profile-bio\">\n\t\t\t<p><span className=\"profile-real-name\">Welcome To</span> {user.username}'s finstagram account!</p>\n\t\t\t</div>\n\n            <DisplayImage/>\n\t\t\t\n            </div>\n             \n            </div>\n\n        \n       \n        )\n\n    }\n    export default Profile","import React, {useState} from \"react\"\n\nexport const useInputs = (initialValue)=>{\n    const [value, setValue] = useState(initialValue)\n\n    const handleChange = (e)=>{\n        setValue(e.target.value)\n    }\n    return {value, onChange: handleChange}\n}","import React, { useContext, useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport {AuthContext} from \"../providers/AuthContext\"\nimport { apiURL } from \"../utility/apiURL\"\nimport PostCard from \"./PostCard\"\nimport Comment from \"./Comments\"\nconst Home =()=>{\n    const API = apiURL()\n    const {currentUser, token} = useContext(AuthContext)\n    const [posts, setPosts] = useState([])\n\n\n\n\n    useEffect(() => {\n            \n        const allPosts= async () => {  \n                   \n                    let res = await axios({\n                    method: \"get\", \n                    url: `${API}/posts/`,\n                    headers: {\n                        'AuthToken': token\n                    }\n                })\n                \n            setPosts(res.data.payload);\n            console.log(res.data)\n        }\n        allPosts();\n    }, [API])\n   \n    \n    const showPosts = posts.map((post)=>{\n        return(\n           <>\n\n           <PostCard  \n           username = {post.username}\n           imageUrl={API + post.pictures}\n            \n            postContent={post.content}/>\n          \n           </>\n        )\n    })\n\n    \n    return(\n        // <div>{showPosts}</div>\n        \n        <div>\n        <h1> Look at your friend's Posts </h1>\n        {showPosts}\n        \n    \n        </div>\n    )\n}\nexport default Home\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { apiURL } from \"../utility/apiURL\"\nimport {AuthContext} from \"../providers/AuthContext\"\nexport default function Users() {\n\n    const [users, setUsers] = useState([]);\n    const API = apiURL();\n    const {token} = useContext(AuthContext)\n    useEffect(() => {\n        const getAllUsers = async () => {     \n                    let res = await axios({\n                    method: \"get\", \n                    url: `${API}/users/all`,\n                    headers: {\n                        'AuthToken': token\n                    }\n                })\n            setUsers(res.data.users);\n        }\n        getAllUsers();\n    }, [API])\n\n    return(\n        <div>\n            <h1>All USERS MUST BE LOGGED IN TO VIEW</h1>\n            <ul>\n                {users.map(user => {\n                    return <li key={user.id}>{user.email}</li>\n                })}\n            </ul>\n        </div>\n    )\n};","import React, {useContext} from \"react\"\nimport {Route, Redirect} from \"react-router-dom\"\nimport {AuthContext} from \"../providers/AuthContext\"\n\nexport const AuthRoute = ({children, ...rest})=>{\n    const { currentUser } = useContext(AuthContext)\n\n    return(\n        <Route\n            {...rest}\n            render = {({location})=>{\n                return !currentUser ? children : <Redirect to = \"/home\"/>\n            }}\n        />\n    )\n}\n\nexport const ProtectedRoute = ({children, ...rest})=>{\n    const {currentUser} = useContext(AuthContext)\n    return(\n        <Route\n            {...rest}\n            render= {({location})=>{\n                return currentUser ? children : <Redirect to =\"/login\"/>\n            }}\n        />\n    )\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./component/Login\"\nimport SignUp from \"./component/SignUp\";\nimport AuthProvider from \"./providers/AuthContext\"\nimport Profile from \"./component/Profile\"\nimport NavBar from \"./component/NavBar\"\nimport Home from \"./component/Home\";\n\n\nimport Users from \"./component/Users\"\nimport {AuthRoute, ProtectedRoute} from \"./utility/routesUtil\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <AuthProvider>\n    <NavBar />\n      <Switch>\n        <AuthRoute exact path={\"/\"}>\n          <SignUp />\n        </AuthRoute>\n\n        <AuthRoute path={\"/login\"}>\n          <Login />\n        </AuthRoute>\n\n        <ProtectedRoute path=\"/users\">\n          <Users />\n        </ProtectedRoute>\n\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n\n      </Switch>\n    </AuthProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import 'bootstrap/dist/css/bootstrap.min.css'\n// import $ from 'jquery';\n// import Popper from 'popper.js';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(<Router><App/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}