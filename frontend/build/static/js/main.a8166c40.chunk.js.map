{"version":3,"sources":["utility/InputHooks.js","firebase.js","utility/firebaseFunction.js","utility/apiURL.js","component/Login.js","providers/AuthContext.js","component/SignUp.js","component/NavBar.js","component/Comments/CommentsIndex.js","component/Comments/CreateComment.js","component/Profile-Page/PostCard.js","component/Profile-Page/PostsList.js","component/Profile-Page/Profile.js","component/HomePage/HomePostCard.js","component/HomePage/Home.js","component/Users.js","utility/routesUtil.js","App.js","serviceWorker.js","index.js"],"names":["useInputs","initialValue","useState","value","setValue","onChange","e","target","process","config","apiKey","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","databaseURL","REACT_APP_DATABASEURL","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENTID","firebase","initializeApp","storage","logout","auth","signOut","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","apiURL","window","location","hostname","Login","history","useHistory","setEmail","setPassword","console","log","handleSubmit","a","preventDefault","push","alert","className","rel","href","src","onSubmit","type","placeholder","currentTarget","to","AuthContext","createContext","AuthProvider","children","loading","setLoading","currentUser","setCurrentUser","token","setToken","updateUser","user","uid","lastLogin","metadata","id","getIdToken","then","useEffect","onAuthStateChanged","Provider","API","SignUp","localStorage","clear","username","setUsername","image","setImage","useContext","res","ref","name","put","on","child","getDownloadURL","url","axios","post","profile_pic","catch","err","files","NavBar","params","onClick","CommentsIndex","post_id","comments","setComments","method","headers","data","body","showComment","showAllComments","map","comment","content","addComment","previousComments","CreateComment","setComment","PostCard","imageUrl","postContent","style","height","width","border","PostsList","posts","showPosts","pictures","tabIndex","Profile","setUser","file","setFile","submitted","setSubmitted","setPosts","user_id","fetchData","fetchPosts","addPost","formData","FormData","append","newPost","payload","HomePostCard","homeImageUrl","Home","allPosts","Users","users","setUsers","getAllUsers","key","AuthRoute","rest","render","ProtectedRoute","App","exact","path","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a8166c40.chunk.js","sourcesContent":["import React, {useState} from \"react\"\n\nexport const useInputs = (initialValue)=>{\n    const [value, setValue] = useState(initialValue)\n\n    const handleChange = (e)=>{\n        setValue(e.target.value)\n    }\n    return {value, onChange: handleChange}\n}","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/storage'\nconst{\n    REACT_APP_APIKEY,\n    REACT_APP_AUTHDOMAIN,\n    REACT_APP_DATABASEURL,\n    REACT_APP_PROJECTID,\n    REACT_APP_STORAGEBUCKET,\n    REACT_APP_MESSAGINGSENDERID,\n    REACT_APP_APPID,\n    REACT_APP_MEASUREMENTID,\n} = process.env\n\nconst config = {\n    apiKey: REACT_APP_APIKEY,\n    authDomain:  REACT_APP_AUTHDOMAIN,\n    databaseURL: REACT_APP_DATABASEURL,\n    projectId: REACT_APP_PROJECTID,\n    storageBucket: REACT_APP_STORAGEBUCKET,\n    messagingSenderId: REACT_APP_MESSAGINGSENDERID,\n    appId: REACT_APP_APPID,\n    measurementId: REACT_APP_MEASUREMENTID,\n}\nfirebase.initializeApp(config)\nexport const storage = firebase.storage()\nexport default firebase\n\n\n\n\n\n","import firebase from \"../firebase\"\n\nexport const logout = () => firebase.auth().signOut()\n\nexport const login = (email, password) => firebase.auth().signInWithEmailAndPassword(email, password)\n\nexport const signup = (email, password)=> firebase.auth().createUserWithEmailAndPassword(email,password)\n\nexport const getFirebaseIdToken = ()=>firebase.auth().currentUser.getIdToken(false)","export const apiURL = () => {\n    return window.location.hostname === \"localhost\"\n      ? \"http://localhost:3006\"\n      // : \"https://finstagram20.herokuapp.com/\";\n      :\"https://finstaapp2020.herokuapp.com\";\n  };\n  ","import React,{useState} from \"react\";\nimport { useInputs } from \"../utility/InputHooks\"\nimport {useHistory} from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\nimport \"../CSS/Login.css\";\nimport axios from \"axios\"\nimport {login} from \"../utility/firebaseFunction\"\n\nimport { apiURL } from \"../utility/apiURL\";\nconst API = apiURL();\n\nexport default function Login(){\n  const history = useHistory()\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n const [error, setError] = useState(false)\n console.log(email, password)\n\n const handleSubmit = async (e) => {\n  e.preventDefault();\n    try {\n      await login(email, password)\n      history.push(\"/home\"); \n    } catch (err) {\n      alert(\"Username Or Password Is incorrect\")\n    }\n  \n};\n\n  return (\n    <div className=\"main\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n      />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"instagram\">\n            <img\n              src=\"https://miro.medium.com/max/701/1*gbGs4B0o65vGY6AeruKCdw.jpeg\"\n              className=\"ig-pic\"\n\n            />\n          </div>\n\n          <div className=\"instagram\">\n            <div className=\"right-column text-center\">\n              <img\n                src=\"https://see.fontimg.com/api/renderfont4/YdKj/eyJyIjoiZnMiLCJoIjoxMzAsInciOjIwMDAsImZzIjo2NSwiZmdjIjoiIzAwMDAwMCIsImJnYyI6IiNGRkZGRkYiLCJ0IjoxfQ/Rmluc3RhZ3JhbQ/countryside.png\"\n                className=\"ig-logo\"\n              />\n              <p className=\"description\">\n                Sign In To See Photo And Videos From Your Friends\n              </p>\n            \n              <form onSubmit={handleSubmit}>\n              <div className=\"form\">\n                  <input type=\"text\" className=\"form-control\" value = {email} placeholder=\"Email\"  onChange={(e) => setEmail(e.currentTarget.value)}/>\n              </div>\n              <div className=\"form\">\n                  <input type=\"password\"  className=\"form-control\" value = {password} placeholder=\"Password\"  onChange={(e) => setPassword(e.currentTarget.value)}/>\n              </div>\n              <input type=\"submit\" className=\"btn btn-primary btn-block\" placeholder=\"signin\"/>\n            </form>\n            <div className=\"right-column-login text-center\">\n            <Link to=\"/\" className=\"button\">New? Sign Up</Link>\n            </div>\n            </div>\n            \n          </div>\n\n        </div>\n      </div>\n    </div>\n   \n  );\n\n  \n};\n","import React, {createContext, useEffect, useState} from \"react\"\nimport {getFirebaseIdToken} from \"../utility/firebaseFunction\"\nimport firebase from \"../firebase\"\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(null);\n\n  const updateUser = (user) => {\n    if (user) {\n      const { email, uid } = user;\n      const lastLogin = user.metadata.lastLogin;\n      setCurrentUser({ email, lastLogin, id: uid });\n      getFirebaseIdToken().then((token) => {\n        setToken(token);\n        setLoading(false);\n      });\n    } else {\n      setCurrentUser(null);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(updateUser);\n    return unsubscribe;\n  }, []);\n\n  if (loading) {\n    return (\n      <div>\n          ...loading\n      </div>\n    );\n  }\n  return (\n    <AuthContext.Provider value={{ currentUser, token }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;","import React, { useState, useContext } from \"react\";\nimport { useInputs } from \"../utility/InputHooks\"\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../CSS/SignUp.css\";\nimport axios from \"axios\";\nimport { signup } from \"../utility/firebaseFunction\";\nimport { apiURL } from \"../utility/apiURL\";\nimport {AuthContext} from \"../providers/AuthContext\"\nimport {storage} from \"../firebase\"\nconst API = apiURL();\n\nconst SignUp = () => {\n  localStorage.clear();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [profile_pic, setProfile_Pic] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n  const [image, setImage] = useState(null)\n  const history = useHistory();\n  const content = useInputs(\"\")\n  const [file, setFile] = useState([])\n  const {currentUser} = useContext(AuthContext)\n  const [url, setUrl] = useState(\"\")\n  // let user_id = 1\n  // console.log(email,username, password);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {    \n        let res = await signup(email, password);\n        const uploadTask = storage.ref(`image/${image.name}`\n        ).put(image)\n        uploadTask.on(\n      \"state_changed\",\n      ()=>{\n        storage\n        .ref(\"image\")\n        .child(image.name)\n        .getDownloadURL()\n        .then(url=>{\n          debugger\n          console.log(url)\n         axios.post(`${API}/users`, {id: res.user.uid, email, username, password, profile_pic:url});\n        }).catch(err=>{\n          console.log(err)\n          debugger\n        })\n      }\n    )\n        \n       \n    } catch (err) {\n      debugger\n    \n    }\n \n  };\n\n  const handleChange = (e)=>{\n    if(e.target.files[0]){\n      setImage(e.target.files[0])\n    }\n  } \n\n//  const handleUpload= async ()=>{\n   \n   \n  \n//  }\n \n  return (\n    <div className=\"main\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n      />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"instagram\">\n            <img\n              src=\"https://miro.medium.com/max/701/1*gbGs4B0o65vGY6AeruKCdw.jpeg\"\n              className=\"ig-pic\"\n            />\n          </div>\n\n          <div className=\"instagram\">\n            <div className=\"right-column text-center\">\n              <img\n                src=\"https://see.fontimg.com/api/renderfont4/YdKj/eyJyIjoiZnMiLCJoIjoxMzAsInciOjIwMDAsImZzIjo2NSwiZmdjIjoiIzAwMDAwMCIsImJnYyI6IiNGRkZGRkYiLCJ0IjoxfQ/Rmluc3RhZ3JhbQ/countryside.png\"\n                className=\"ig-logo\"\n              />\n              <p className=\"description\">\n                Sign Up To See Photo And Videos From Your Friends\n              </p>\n              <div className=\"sign-up-info\">\n                <form onSubmit={handleSubmit}>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    onChange={(e) => setEmail(e.currentTarget.value)}\n                  />\n\n\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Username\"\n                    onChange={(e) => setUsername(e.currentTarget.value)}\n                  />\n\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.currentTarget.value)}\n                  />\n                <input \n                className=\"profile_pic\" \n                type=\"file\" \n                onChange={handleChange} />\n                \n                  \n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    placeholder=\"signup\"\n                  />\n\n                \n                </form>\n\n                \n              \n              </div>\n              <p className=\"terms-conditions\">\n                {\" \"}\n                By signing up, you agree to our Terms and Policy\n              </p>\n            </div>\n            <div className=\"right-column-login text-center\">\n              <Link to=\"/login\" className=\"button\">\n                Have An Account? SignIn\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SignUp;\n\n\n","import React, {useContext} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {logout} from \"../utility/firebaseFunction\"\nimport {AuthContext} from \"../providers/AuthContext\"\nimport \"../CSS/Navbar.css\"\nimport Login from \"./Login\"\n\n\n\nexport default function NavBar(params) {\n    \n\nconst { currentUser } = useContext(AuthContext);\n\n\tconst displayButton = () => {\n\t\tif (currentUser) {\n      return(\n        <>\n        <NavLink to={\"/home\"} className=\"home\" >Home</NavLink> \n        <NavLink to = {\"/profile\"} className=\"profile\"></NavLink>\n        <button onClick={logout} className=\"logout\">Logout</button>\n        </>\n      ) \n      \n\t\t} else {\n      return(\n        <NavLink to={\"/login\"}>Login</NavLink>\n      )\n\t\t\t\n    }\n    \n  };\n  \n\n\n    return(\n    <>\n    <nav className = \"Nav\">\n      <div className = \"menu\">\n       \n        <div className = \"brand\">\n            <div className = \"logo\">\n            <div className=\"home-body\">\n            <NavLink to ={\"/home\"}className=\"instaLogo\">Instagram</NavLink>\n                  {displayButton()}\n            </div>\n              \n            </div>\n            \n        </div>\n      </div>\n    </nav>\n    \n     \n      </>\n       \n      \n    )\n};\n\n\n  ","import React, {useState, useEffect, useContext} from \"react\"\nimport axios from \"axios\"\nimport {AuthContext} from \"../../providers/AuthContext\"\nimport { apiURL } from \"../../utility/apiURL\"\nimport \"../../CSS/Comments.css\"\nimport CreateComment from \"../Comments/CreateComment\"\n\nconst CommentsIndex = ({post_id})=>{\n    // const handleStyle = {\n    //     height:\"50px\",\n    //     width:\"250px\",\n    //     margintop: \"5%\"\n        \n    // }\n    const API = apiURL()\n    const {token} = useContext(AuthContext)\n    const [comments, setComments] = useState([]);\n    const [username, setUsername] = useState([])\n\n    useEffect(()=>{\n        const showComment = async()=>{\n            let res = await axios({\n                method: \"get\",\n                url: `${API}/comments/${post_id}`,\n                headers:{\n                    'AuthToken': token\n                }\n            })\n            setComments(res.data.body.comments)\n            console.log(res.data)\n        }\n        showComment()\n    },[API])\n    \n    const addComment = (comment)=>{\n        setComments(previousComments=>{\n            return(\n                [...previousComments, comment]\n            )\n        })\n    }\n    // const addUsername=(comment)=>{\n    //     setUsername(previousComment=>{\n    //         return(\n    //             [...previousComment, comment]\n    //         )\n    //     })\n    // }\n    \n    const showAllComments = comments.map((comment)=>{\n        return(\n       \n            <li> \n            {comment.username}: {comment.content}\n            </li>\n           \n        )\n        \n    })\n    \ndebugger\n\n    return(\n        <div className=\"containerComments\">\n            <ul className=\"comments-list\">\n            {showAllComments}\n            </ul>\n               \n                <CreateComment post_id={post_id} addComment={addComment}/>\n        </div>\n    )\n}\nexport default CommentsIndex\n","import React, {useState, useContext} from \"react\"\nimport axios from \"axios\"\nimport {AuthContext} from \"../../providers/AuthContext\"\nimport { apiURL } from \"../../utility/apiURL\"\nimport \"../../CSS/Comments.css\"\nimport CommentsIndex from \"./CommentsIndex\"\n\n\nconst CreateComment = ({post_id, addComment})=>{\n    const API = apiURL()\n    const {token} = useContext(AuthContext)\n    const [comment, setComment] = useState(\"\");\n    const handleSubmit = async (e)=>{\n        e.preventDefault()\n        let res = await axios({\n            method:\"post\",\n            url: `${API}/comments/${post_id}`,\n            data: {content: comment},\n            headers:{\n                'AuthToken': token,\n                \n            }\n        })\n        res.data.body.comment.username = res.data.body.username[\"username\"]\n        addComment(res.data.body.comment)\n        // window.location.reload()\n    }\n   \n\n    return(\n        <form className=\"handleComment\" onSubmit= {handleSubmit}>\n        <div className=\"comment-button\">\n            <input type=\"text\" className=\"comment-box\" value={comment} onChange={(e)=>setComment(e.target.value)}/>\n            <button>Post Your Comment</button>\n        </div>\n   \n         {/* <CommentsIndex post_id={post_id}/>     */}\n       </form>\n        \n        \n        \n    )\n}\n\nexport default CreateComment","import React from \"react\"\nimport \"../../CSS/PostCard.css\"\nimport CreateComment from \"../Comments/CreateComment\"\nimport CommentsIndex from \"../Comments/CommentsIndex\"\n\nconst PostCard = ({username, imageUrl, postContent, post_id})=>{\n    const handleStyle = {\n        height:\"75%\",\n        width:\"75%\",\n        border: \"2px solid black\"\n        \n        \n    }\n\n    return(\n        <div className=\"pic\">\n\n        <div className=\"picture\">\n            <h3>{username}</h3>\n            <img className=\"pix\" src={imageUrl} style={handleStyle}/>\n            <h4>{postContent}</h4>\n            <div className=\"iconz\">\n           \n\n            <br/>\n            {/* <CreateComment post_id={post_id}/> */}\n            <CommentsIndex post_id={post_id}/>  \n            </div>\n          \n\n         </div>\n\n            \n        </div>\n\n       \n    )\n}\nexport default PostCard","import React, { useContext, useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport {AuthContext} from \"../../providers/AuthContext\"\nimport { apiURL } from \"../../utility/apiURL\"\nimport PostCard from \"./PostCard\"\nimport CreateComment from \"../Comments/CreateComment\"\nimport DisplayComment from \"../Comments/CommentsIndex\"\nimport \"../../CSS/DisplayImage.css\"\n\nconst PostsList =({posts})=>{\n    const API = apiURL()\n    const {currentUser, token} = useContext(AuthContext)\n    // const {currentUser, token} = useContext(AuthContext)\n    // const [posts, setPosts] = useState([])\n\n    // let user_id = currentUser.id\n\n    // useEffect(() => {\n            \n    //     const createPosts= async () => {  \n           \n    //                 let res = await axios({\n    //                 method: \"get\", \n    //                 url: `${API}/posts/${user_id}`,\n    //                 headers: {\n    //                     'AuthToken': token\n    //                 }\n    //             })\n                \n    //         setPosts(res.data.payload);\n    //         console.log(res.data)\n    //     }\n    //     createPosts();\n    // }, [API])\n\n  \n    \n    \n    const showPosts = posts.map((post)=>{\n        debugger\n        return(\n           <div className=\"showPostDiv\">\n\n           <PostCard  \n           username = {post.username}\n           imageUrl={API + post.pictures}\n           postContent={post.content}\n           post_id={post.id}\n            />\n          \n          \n           </div>\n        )\n    })\n    \n    \n\n    \n    return(\n      \n       \n\n         <div className=\"container\">\n            <div className=\"galleryDisplay\">\n                <div className=\"gallery-item\" tabIndex=\"0\">\n                <div className=\"galleryImage\">{showPosts}</div>\n                \n             \n                </div>\n            </div>\n        </div>\n        \n    )\n}\nexport default PostsList","import React, {useContext, useEffect,  useState} from \"react\"\nimport {AuthContext,} from \"../../providers/AuthContext\"\nimport { NavLink } from \"react-router-dom\"\nimport NavBar from \"../NavBar\"\nimport axios from \"axios\"\nimport { apiURL } from \"../../utility/apiURL\"\nimport \"../../CSS/Profile.css\"\nimport firebase from \"../../firebase\"\nimport {storage} from \"../../firebase\"\nimport { useInputs } from \"../../utility/InputHooks\"\nimport PostsList from \"./PostsList\"\nimport CreateComment from \"../Comments/CreateComment\"\nimport CommentsIndex from \"../Comments/CommentsIndex\"\n\n\n\n    const Profile = ()=>{\n        const [user, setUser] = useState([])\n        const [url, setUrl] = useState(\"\")\n        const [progress, setProgress] = useState(0)\n        const [error, setError] = useState(\"\")\n        const content = useInputs(\"\")\n        const[file, setFile] = useState([])\n        const[pics, setPics] = useState([])\n        const [submitted, setSubmitted] = useState(null)\n        const API = apiURL()\n        const {currentUser, token} = useContext(AuthContext)\n        const [posts, setPosts] = useState([])\n        let user_id = currentUser.id\n        // const [postImage, setPostImagePath] = useState([])\n        let email = currentUser.email\n        \n\n        useEffect(() => {\n            \n        const fetchData = async () => {  \n            try{\n                let res = await axios({\n                    method: \"get\", \n                    url: `${API}/users/singleUser/${email}`,\n                    headers: {\n                        'AuthToken': token\n                    }\n                })\n                \n            setUser(res.data.user);    \n            }catch(err){\n                console.log(err)\n            }      \n        }\n        fetchData();\n        fetchPosts()\n    }, [API, submitted]) \n    // line 53 is effect's the dependancy array\n\n    // const addPost = (post)=>{\n    //     setPics(previousPost=>{\n    //         return(\n    //             [...previousPost, post]\n    //         )\n    //     })\n    // }\n        const onSelectImage = (e)=>{\n            e.preventDefault()\n            setFile(e.target.files[0])\n        }\n\n        const addPost = async (e)=>{ \n            try{\n                e.preventDefault()\n                const formData = new FormData()\n                formData.append(\"allImages\", file)\n                formData.append(\"content\", content.value)\n                const config = {\n                    headers:{\n                        \"content-type\":\"multipart/form-data\",\n\n                    }\n                }\n                let newPost = await axios.post(`${API}/posts/${user_id}`, formData, config)\n                console.log(newPost.data)\n                console.log(\"new post created\")\n                setSubmitted(true)\n                // debugger\n                // addPost(newPost.data.post[\"pictures\"] && newPost.data.post[\"content\"])\n                // window.location.reload()\n                // see if app still works if it doesn't have to reload. \n                \n\n                \n\n            }catch(err){\n                console.log(err)\n            }\n        }\n        debugger\n        \n        const fetchPosts= async () => {    \n            let res = await axios({\n                method: \"get\", \n                url: `${API}/posts/${user_id}`,\n                headers: {\n                    'AuthToken': token\n                    }\n            })\n            setPosts(res.data.payload);\n            console.log(res.data)\n        }\n        fetchPosts();   \n\n       \n        return(\n\n  \n            \n            <div className=\"profileContainer\">\n                <div className=\"profile-pic\">\n                    \n                    \n                <img src={user.profile_pic} className=\"profile-img\"/>\n                </div>\n\n\t\t\t\t<h1 className=\"profile-user-name\">{user.username}</h1>\n                <form onSubmit={addPost} className=\"profileUserSettings\">\n\n                <h1 className=\"postPicsHere\">Post Your Pictures Here!</h1>\n\t\t\t    <input className=\"file\" placeholder= \"hello\" type = \"file\" onChange={onSelectImage}/>\n                <input placeholder = \"Enter Caption\" className=\"content\" type=\"text\" {...content}/>\n                <button type=\"submit\" className=\"btn profile-edit-btn\">Add Picture</button>\n\n\t\t\t    </form>\n\n                <div className=\"profile-stats\">\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li><span className=\"profile-stat-count\">164</span> posts</li>\n\t\t\t\t\t<li><span className=\"profile-stat-count\">188</span> followers</li>\n\t\t\t\t\t<li><span className=\"profile-stat-count\">206</span> following</li>\n\n\t\t\t\t</ul>\n\n            <div className=\"profile-content\">\n\t\t\t<h2><span className=\"profile-real-name\">Welcome To</span> {user.username}'s finstagram account!</h2>\n\t\t\t</div>\n\n            <PostsList posts={posts}/>\n            \n           \n            \n            \n\t\t\t\n            </div>\n             \n            </div>\n\n        \n       \n        )\n\n    }\n    export default Profile","import React, { useReducer } from \"react\"\nimport \"../../CSS/HomePostCard.css\"\nimport CreateComment from \"../Comments/CreateComment\"\nimport CommentsIndex from \"../Comments/CommentsIndex\"\n\n\nconst HomePostCard = ({homeImageUrl, postContent, username, post_id, profile_pic})=>{\n    const handleStyles = {\n        height:\"75%\",\n        width:\"100%\"\n        // border: \"2px solid black\"\n        \n    }\n\n    return(\n        <div className=\"homePic\">\n\n        <div className=\"picture\">\n            <div className=\"postheader\">\n                <img className=\"profile-P\" src={profile_pic}/>\n                <h1 className=\"usernames\">{username}</h1>\n            </div>\n            <img className=\"profilePictureImage\" src={homeImageUrl} style={handleStyles}/>\n            <div className=\"comment-section\">\n                <h2 className=\"caption\">{postContent}</h2>\n                <CommentsIndex post_id={post_id}/> \n            </div>\n\n         </div>\n        </div>\n\n       \n    )\n}\nexport default HomePostCard","import React, { useContext, useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport {AuthContext} from \"../../providers/AuthContext\"\nimport { apiURL } from \"../../utility/apiURL\"\nimport HomePostCard from \"./HomePostCard\"\nimport CreateComment from \"../Comments/CreateComment\"\n// import post from \"../../../../backend/Queries/post\"\nconst Home =()=>{\n    const API = apiURL()\n    const {currentUser, token} = useContext(AuthContext)\n    const [posts, setPosts] = useState([])\n    const [username, setUsername] = useState([])\n\n\n\n\n    useEffect(() => {\n            \n        const allPosts= async () => {  \n                   \n                    let res = await axios({\n                    method: \"get\", \n                    url: `${API}/posts/`,\n                    headers: {\n                        'AuthToken': token\n                    }\n                })\n                \n            setPosts(res.data.payload);\n            console.log(res.data)\n        }\n        allPosts();\n    }, [API])\n   \n    \n    const showPosts = posts.map((post)=>{\n        return(\n           <>\n            {/* {post.username} */}\n           <HomePostCard  \n           username = {post.username}\n           homeImageUrl={API + post.pictures}\n           postContent={post.content}\n           post_id = {post.id}\n           profile_pic = {post.profile_pic}\n           />\n          \n           </>\n        )\n    })\n\n    \n    return(\n        // <div>{showPosts}</div>\n        \n        <div>\n        <h1> Look at your friend's Posts </h1>\n       \n        {showPosts}\n        \n    \n        </div>\n    )\n}\nexport default Home\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { apiURL } from \"../utility/apiURL\"\nimport {AuthContext} from \"../providers/AuthContext\"\nexport default function Users() {\n\n    const [users, setUsers] = useState([]);\n    const API = apiURL();\n    const {token} = useContext(AuthContext)\n    useEffect(() => {\n        const getAllUsers = async () => {     \n                    let res = await axios({\n                    method: \"get\", \n                    url: `${API}/users/all`,\n                    headers: {\n                        'AuthToken': token\n                    }\n                })\n            setUsers(res.data.users);\n        }\n        getAllUsers();\n    }, [API])\n\n    return(\n        <div>\n            <h1>All USERS MUST BE LOGGED IN TO VIEW</h1>\n            <ul>\n                {users.map(user => {\n                    return <li key={user.id}>{user.email}</li>\n                })}\n            </ul>\n        </div>\n    )\n};","import React, {useContext} from \"react\"\nimport {Route, Redirect} from \"react-router-dom\"\nimport {AuthContext} from \"../providers/AuthContext\"\n\nexport const AuthRoute = ({children, ...rest})=>{\n    const { currentUser } = useContext(AuthContext)\n\n    return(\n        <Route\n            {...rest}\n            render = {({location})=>{\n                return !currentUser ? children : <Redirect to = \"/home\"/>\n            }}\n        />\n    )\n}\n\nexport const ProtectedRoute = ({children, ...rest})=>{\n    const {currentUser} = useContext(AuthContext)\n    return(\n        <Route\n            {...rest}\n            render= {({location})=>{\n                return currentUser ? children : <Redirect to =\"/login\"/>\n            }}\n        />\n    )\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./component/Login\"\nimport SignUp from \"./component/SignUp\";\nimport AuthProvider from \"./providers/AuthContext\"\nimport Profile from \"../src/component/Profile-Page/Profile\"\nimport NavBar from \"./component/NavBar\"\nimport Home from \"./component/HomePage/Home\";\n\n\nimport Users from \"./component/Users\"\nimport {AuthRoute, ProtectedRoute} from \"./utility/routesUtil\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <AuthProvider>\n         <NavBar />\n      <Switch>\n        <AuthRoute exact path={\"/\"}>\n          <SignUp />\n        </AuthRoute>\n\n        <AuthRoute path={\"/login\"}>\n          <Login />\n        </AuthRoute>\n        \n        <ProtectedRoute path=\"/users\">\n          <Users />\n        </ProtectedRoute>\n\n        <ProtectedRoute path=\"/profile\">\n          <Profile />\n        </ProtectedRoute>\n\n        <ProtectedRoute path=\"/home\">\n          <Home />\n        </ProtectedRoute>\n\n      </Switch>\n    </AuthProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import 'bootstrap/dist/css/bootstrap.min.css'\n// import $ from 'jquery';\n// import Popper from 'popper.js';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(<Router><App/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}